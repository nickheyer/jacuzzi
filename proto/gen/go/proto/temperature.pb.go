// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/temperature.proto

package jacuzziv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Temperature reading from a sensor
type TemperatureReading struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SensorId           string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	ClientId           string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TemperatureCelsius float64                `protobuf:"fixed64,3,opt,name=temperature_celsius,json=temperatureCelsius,proto3" json:"temperature_celsius,omitempty"`
	Timestamp          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SensorType         string                 `protobuf:"bytes,5,opt,name=sensor_type,json=sensorType,proto3" json:"sensor_type,omitempty"` // CPU, GPU, DISK, etc.
	SensorName         string                 `protobuf:"bytes,6,opt,name=sensor_name,json=sensorName,proto3" json:"sensor_name,omitempty"` // Human readable name
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TemperatureReading) Reset() {
	*x = TemperatureReading{}
	mi := &file_proto_temperature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemperatureReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureReading) ProtoMessage() {}

func (x *TemperatureReading) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureReading.ProtoReflect.Descriptor instead.
func (*TemperatureReading) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *TemperatureReading) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *TemperatureReading) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TemperatureReading) GetTemperatureCelsius() float64 {
	if x != nil {
		return x.TemperatureCelsius
	}
	return 0
}

func (x *TemperatureReading) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TemperatureReading) GetSensorType() string {
	if x != nil {
		return x.SensorType
	}
	return ""
}

func (x *TemperatureReading) GetSensorName() string {
	if x != nil {
		return x.SensorName
	}
	return ""
}

// Request to submit temperature readings
type SubmitTemperatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Readings      []*TemperatureReading  `protobuf:"bytes,1,rep,name=readings,proto3" json:"readings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTemperatureRequest) Reset() {
	*x = SubmitTemperatureRequest{}
	mi := &file_proto_temperature_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTemperatureRequest) ProtoMessage() {}

func (x *SubmitTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTemperatureRequest.ProtoReflect.Descriptor instead.
func (*SubmitTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitTemperatureRequest) GetReadings() []*TemperatureReading {
	if x != nil {
		return x.Readings
	}
	return nil
}

// Response for temperature submission
type SubmitTemperatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTemperatureResponse) Reset() {
	*x = SubmitTemperatureResponse{}
	mi := &file_proto_temperature_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTemperatureResponse) ProtoMessage() {}

func (x *SubmitTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTemperatureResponse.ProtoReflect.Descriptor instead.
func (*SubmitTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitTemperatureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitTemperatureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to get temperature history
type GetTemperatureHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SensorId      string                 `protobuf:"bytes,2,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureHistoryRequest) Reset() {
	*x = GetTemperatureHistoryRequest{}
	mi := &file_proto_temperature_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureHistoryRequest) ProtoMessage() {}

func (x *GetTemperatureHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetTemperatureHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{3}
}

func (x *GetTemperatureHistoryRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetTemperatureHistoryRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *GetTemperatureHistoryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTemperatureHistoryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetTemperatureHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response with temperature history
type GetTemperatureHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Readings      []*TemperatureReading  `protobuf:"bytes,1,rep,name=readings,proto3" json:"readings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureHistoryResponse) Reset() {
	*x = GetTemperatureHistoryResponse{}
	mi := &file_proto_temperature_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureHistoryResponse) ProtoMessage() {}

func (x *GetTemperatureHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetTemperatureHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{4}
}

func (x *GetTemperatureHistoryResponse) GetReadings() []*TemperatureReading {
	if x != nil {
		return x.Readings
	}
	return nil
}

// Request to get current temperatures for all sensors
type GetCurrentTemperaturesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentTemperaturesRequest) Reset() {
	*x = GetCurrentTemperaturesRequest{}
	mi := &file_proto_temperature_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentTemperaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTemperaturesRequest) ProtoMessage() {}

func (x *GetCurrentTemperaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTemperaturesRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentTemperaturesRequest) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{5}
}

func (x *GetCurrentTemperaturesRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// Response with current temperatures
type GetCurrentTemperaturesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Readings      []*TemperatureReading  `protobuf:"bytes,1,rep,name=readings,proto3" json:"readings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentTemperaturesResponse) Reset() {
	*x = GetCurrentTemperaturesResponse{}
	mi := &file_proto_temperature_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentTemperaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTemperaturesResponse) ProtoMessage() {}

func (x *GetCurrentTemperaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTemperaturesResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentTemperaturesResponse) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{6}
}

func (x *GetCurrentTemperaturesResponse) GetReadings() []*TemperatureReading {
	if x != nil {
		return x.Readings
	}
	return nil
}

var File_proto_temperature_proto protoreflect.FileDescriptor

const file_proto_temperature_proto_rawDesc = "" +
	"\n" +
	"\x17proto/temperature.proto\x12\n" +
	"jacuzzi.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfb\x01\n" +
	"\x12TemperatureReading\x12\x1b\n" +
	"\tsensor_id\x18\x01 \x01(\tR\bsensorId\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12/\n" +
	"\x13temperature_celsius\x18\x03 \x01(\x01R\x12temperatureCelsius\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vsensor_type\x18\x05 \x01(\tR\n" +
	"sensorType\x12\x1f\n" +
	"\vsensor_name\x18\x06 \x01(\tR\n" +
	"sensorName\"V\n" +
	"\x18SubmitTemperatureRequest\x12:\n" +
	"\breadings\x18\x01 \x03(\v2\x1e.jacuzzi.v1.TemperatureReadingR\breadings\"O\n" +
	"\x19SubmitTemperatureResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xe0\x01\n" +
	"\x1cGetTemperatureHistoryRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1b\n" +
	"\tsensor_id\x18\x02 \x01(\tR\bsensorId\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"[\n" +
	"\x1dGetTemperatureHistoryResponse\x12:\n" +
	"\breadings\x18\x01 \x03(\v2\x1e.jacuzzi.v1.TemperatureReadingR\breadings\"<\n" +
	"\x1dGetCurrentTemperaturesRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\\\n" +
	"\x1eGetCurrentTemperaturesResponse\x12:\n" +
	"\breadings\x18\x01 \x03(\v2\x1e.jacuzzi.v1.TemperatureReadingR\breadings2\xd5\x02\n" +
	"\x12TemperatureService\x12`\n" +
	"\x11SubmitTemperature\x12$.jacuzzi.v1.SubmitTemperatureRequest\x1a%.jacuzzi.v1.SubmitTemperatureResponse\x12l\n" +
	"\x15GetTemperatureHistory\x12(.jacuzzi.v1.GetTemperatureHistoryRequest\x1a).jacuzzi.v1.GetTemperatureHistoryResponse\x12o\n" +
	"\x16GetCurrentTemperatures\x12).jacuzzi.v1.GetCurrentTemperaturesRequest\x1a*.jacuzzi.v1.GetCurrentTemperaturesResponseB\xa6\x01\n" +
	"\x0ecom.jacuzzi.v1B\x10TemperatureProtoP\x01Z9github.com/nickheyer/jacuzzi/proto/gen/go/proto;jacuzziv1\xa2\x02\x03JXX\xaa\x02\n" +
	"Jacuzzi.V1\xca\x02\n" +
	"Jacuzzi\\V1\xe2\x02\x16Jacuzzi\\V1\\GPBMetadata\xea\x02\vJacuzzi::V1b\x06proto3"

var (
	file_proto_temperature_proto_rawDescOnce sync.Once
	file_proto_temperature_proto_rawDescData []byte
)

func file_proto_temperature_proto_rawDescGZIP() []byte {
	file_proto_temperature_proto_rawDescOnce.Do(func() {
		file_proto_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_temperature_proto_rawDesc), len(file_proto_temperature_proto_rawDesc)))
	})
	return file_proto_temperature_proto_rawDescData
}

var file_proto_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_temperature_proto_goTypes = []any{
	(*TemperatureReading)(nil),             // 0: jacuzzi.v1.TemperatureReading
	(*SubmitTemperatureRequest)(nil),       // 1: jacuzzi.v1.SubmitTemperatureRequest
	(*SubmitTemperatureResponse)(nil),      // 2: jacuzzi.v1.SubmitTemperatureResponse
	(*GetTemperatureHistoryRequest)(nil),   // 3: jacuzzi.v1.GetTemperatureHistoryRequest
	(*GetTemperatureHistoryResponse)(nil),  // 4: jacuzzi.v1.GetTemperatureHistoryResponse
	(*GetCurrentTemperaturesRequest)(nil),  // 5: jacuzzi.v1.GetCurrentTemperaturesRequest
	(*GetCurrentTemperaturesResponse)(nil), // 6: jacuzzi.v1.GetCurrentTemperaturesResponse
	(*timestamppb.Timestamp)(nil),          // 7: google.protobuf.Timestamp
}
var file_proto_temperature_proto_depIdxs = []int32{
	7, // 0: jacuzzi.v1.TemperatureReading.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: jacuzzi.v1.SubmitTemperatureRequest.readings:type_name -> jacuzzi.v1.TemperatureReading
	7, // 2: jacuzzi.v1.GetTemperatureHistoryRequest.start_time:type_name -> google.protobuf.Timestamp
	7, // 3: jacuzzi.v1.GetTemperatureHistoryRequest.end_time:type_name -> google.protobuf.Timestamp
	0, // 4: jacuzzi.v1.GetTemperatureHistoryResponse.readings:type_name -> jacuzzi.v1.TemperatureReading
	0, // 5: jacuzzi.v1.GetCurrentTemperaturesResponse.readings:type_name -> jacuzzi.v1.TemperatureReading
	1, // 6: jacuzzi.v1.TemperatureService.SubmitTemperature:input_type -> jacuzzi.v1.SubmitTemperatureRequest
	3, // 7: jacuzzi.v1.TemperatureService.GetTemperatureHistory:input_type -> jacuzzi.v1.GetTemperatureHistoryRequest
	5, // 8: jacuzzi.v1.TemperatureService.GetCurrentTemperatures:input_type -> jacuzzi.v1.GetCurrentTemperaturesRequest
	2, // 9: jacuzzi.v1.TemperatureService.SubmitTemperature:output_type -> jacuzzi.v1.SubmitTemperatureResponse
	4, // 10: jacuzzi.v1.TemperatureService.GetTemperatureHistory:output_type -> jacuzzi.v1.GetTemperatureHistoryResponse
	6, // 11: jacuzzi.v1.TemperatureService.GetCurrentTemperatures:output_type -> jacuzzi.v1.GetCurrentTemperaturesResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_temperature_proto_init() }
func file_proto_temperature_proto_init() {
	if File_proto_temperature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_temperature_proto_rawDesc), len(file_proto_temperature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_temperature_proto_goTypes,
		DependencyIndexes: file_proto_temperature_proto_depIdxs,
		MessageInfos:      file_proto_temperature_proto_msgTypes,
	}.Build()
	File_proto_temperature_proto = out.File
	file_proto_temperature_proto_goTypes = nil
	file_proto_temperature_proto_depIdxs = nil
}
